name: ðŸš€ Release Test

on:
  workflow_dispatch:

env:
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10
  # Publish the build output as CI artifact to inspect
  # preview: ${{ !startsWith(github.ref, 'refs/tags/') || github.repository != 'lakekeeper/lakekeeper' }}

# Define permissions for the entire workflow
permissions:
  # contents: write      # Needed for creating releases and uploading assets
  # pull-requests: write # Needed for release-please to create/update PRs
  contents: read
  packages: write

jobs:
  build-binary:
    name: Build Binary
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-22.04
            name: lakekeeper-x86_64-unknown-linux-gnu.tar.gz
            docker-build: false

    runs-on: ${{ matrix.os }}
    continue-on-error: true
    env:
      RUSTFLAGS: ${{ matrix.rustflags || '' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        if: matrix.docker-build == false
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
          cache: true

      - name: Setup node
        if: matrix.docker-build == false
        uses: actions/setup-node@v4
        with:
          node-version: 23

      - name: Build [Cargo]
        if: matrix.docker-build == false
        run: cargo build --all-features --release --locked --target ${{ matrix.target }}

      - name: Prepare Docker [Docker build]
        if: matrix.docker-build == true
        uses: docker/setup-qemu-action@v3

      - name: Build Docker Image [Docker Build]
        if: matrix.docker-build == true
        run: |
          DOCKER_BUILDKIT=1 docker build -t localhost/build-lakekeeper:latest \
            -f docker-build/build-with-alpine.Dockerfile .

      - name: Build [Docker Build]
        if: matrix.docker-build == true
        run: |
          docker run \
            -w /build --mount type=bind,src=$(pwd),target=/build \
            localhost/build-lakekeeper:latest \
            cargo build --release --all-features --locked --target ${{ matrix.target }}

      - name: Prepare artifacts [-nix]
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf ../../../${{ matrix.name }} lakekeeper
          cd -

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bin-${{ matrix.name }}
          path: ${{ matrix.name }}

  build-docker:
    name: Build Docker
    runs-on: ubuntu-24.04
    needs:
      - build-binary
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: List Artifacts
        run: ls -lh

      - name: Restore Binaries
        run: |
          cd bin-lakekeeper-x86_64-unknown-linux-gnu.tar.gz
          tar xzvf lakekeeper-x86_64-unknown-linux-gnu.tar.gz
          cd -

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Docker info
        run: docker info

      - name: Build Docker image (amd64)
        run: |
          DOCKER_BUILDKIT=1 docker build -t localhost/lakekeeper-local:amd64 \
            -f docker/bin.Dockerfile \
            --build-arg "ARCH=amd64" \
            --build-arg "EXPIRES=Never" \
            --build-arg "BIN=bin-lakekeeper-x86_64-unknown-linux-gnu.tar.gz/lakekeeper" .

      - name: Log in to the Container registry
        uses: docker/login-action@6d4b68b490aef8836e8fb5e50ee7b3bdfa5894f0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push docker
        run: |
          COMMIT_SHA=${GITHUB_SHA::8}  # Get the first 8 characters of the commit SHA
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')

          docker tag localhost/lakekeeper-local:amd64 ghcr.io/${REPO_LOWER}:${COMMIT_SHA}-amd64

          docker push ghcr.io/${REPO_LOWER}:${COMMIT_SHA}-amd64
